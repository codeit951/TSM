@page "/user/dashboard"
@inject UserManager<User> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject PricePageState PageState
@inject UserState State
@rendermode InteractiveServer
@layout Layout.UserLayout
@attribute [Authorize]

<div class="scrollbar-hide css-66hwna">
    <div class="css-1mq6rco">
        <div class="css-sai4f1" >
            <div class="balance_card css-1pbigpn" >
                <BalanceCard />
            </div>
            <div class="balance_card css-1ov6cn9">
                <BalanceCard />
            </div>
            <CategoryComponent />
        </div>
        <TradeAreaComponent @rendermode="InteractiveServer" />
        <TradeHistoryComponent @rendermode="InteractiveServer" />
    </div>
</div>
@code {
    private User? user;


    protected override async Task OnInitializedAsync()
    {
        PageState.IsPricePageActive = true;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var username = authState.User.Identity?.Name;

        if (!string.IsNullOrEmpty(username))
        {
            user = await UserManager.FindByNameAsync(username);
            State.SetCurrentUser(user);
        }
    }

    public void Dispose()
    {
        PageState.IsPricePageActive = false;
    }
}
