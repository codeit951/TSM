@page "/user/assets"

@layout Layout.UserLayout
@attribute [Authorize]
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject UserManager<User> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserState State
@inject PricePageState PageState

<link href="pages/assets.css" rel="stylesheet" />
<div class="scrollbar-hide css-66hwna">
    <div class="css-51u8x3">
        <div class="top">
            <BalanceComponent />
            <ActivitiesComponent />
        </div>
        <AssetsListComponent />
    </div>
</div>

@code{
    private User? user;
   
    protected override async Task OnInitializedAsync()
    {
        PageState.IsPricePageActive = true;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var username = authState.User.Identity?.Name;

        if (!string.IsNullOrEmpty(username))
        {
            user = await UserManager.FindByNameAsync(username);
            State.SetCurrentUser(user);
        }
    }
    

    public void Dispose()
    {
        PageState.IsPricePageActive = false;
    }
}