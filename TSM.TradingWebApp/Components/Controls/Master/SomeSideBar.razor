
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="css-1sxj0v3">
    <div class="css-4410oc">
        <div class="css-6ymeda"></div>
        <SettingsTab @bind-Transform="settingsTransform" @rendermode="InteractiveServer" user="user" />
        <div class="css-6ymeda"></div>
        <NotificationTab @rendermode="InteractiveServer" @bind-Transform="Transform" />
        <SideBarMenu @bind-Transform="menuTransform" @rendermode="InteractiveServer" user="user" OpenSettings="OpenSettingsTab" />
        <div class="left">
            <span class="titles">
                <svg xmlns="http://www.w3.org/2000/svg"
                width="18"
                height="18"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="lucide lucide-house">
                    <path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"></path>
                    <path d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                </svg>
                <p style="text-transform: capitalize;">@currentPage</p>
            </span>
            <span class="menu" @onclick="UpdateMenuTransform"><Icon Name="IconName.List" Size="IconSize.x3" /></span>
            <span class="menu"><img src="./The Iron Markets_files/menu.svg" alt="" /></span>
        </div>
        <div class="right">
            <div class="bell_wrapper" @onclick="UpdateTransform">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-bell">
                    <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"></path>
                    <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0"></path>
                </svg>
                <span class="notification_count">1</span>
            </div>
            <div class="user_dropdown_wrapper" style="position: relative;">
                <div class="user" @onclick="() => IsProfileDropDown = true">
                    <div class="user_img_wrapper">
                        <div class="user_avatar"><p>@(user.FirstName.Substring(0,1)+user.LastName.Substring(0,1))</p></div>
                    </div>
                </div>

                <div class="css-19a2r7k" id="dropdownMenu" style="display:@(IsProfileDropDown? "block" : "none"); opacity:@(IsProfileDropDown? "1" : "0");pointer-events: auto;z-index: 99;">
                    <div class="css-1vnlbrl">
                        <div class="css-j3nbck">
                            <div class="dropdown_content">
                                <a href="/user/deposit" class="dropdown_item">
                                    <svg xmlns="http://www.w3.org/2000/svg"
                                    width="16"
                                    height="16"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="lucide lucide-circle-plus">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <path d="M8 12h8"></path>
                                        <path d="M12 8v8"></path>
                                    </svg>
                                    <p>Add funds</p>
                                </a>
                                <a href="/user/withdraw" class="dropdown_item">
                                    <svg xmlns="http://www.w3.org/2000/svg"
                                    width="16"
                                    height="16"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="lucide lucide-circle-minus">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <path d="M8 12h8"></path>
                                    </svg>
                                    <p>Withdraw funds</p>
                                </a>
                                <span class="dropdown_item settings_link" @onclick="UpdateSettingsTransform">
                                    <svg xmlns="http://www.w3.org/2000/svg"
                                    width="16"
                                    height="16"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="lucide lucide-settings">
                                        <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z"></path>
                                        <circle cx="12" cy="12" r="3"></circle>
                                    </svg>
                                    <p>Settings</p>
                                </span>
                                <span class="dropdown_item" @onclick="UpdateTransform">
                                    <svg xmlns="http://www.w3.org/2000/svg"
                                    width="16"
                                    height="16"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="lucide lucide-bell">
                                        <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"></path>
                                        <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0"></path>
                                    </svg>
                                    <p>Notifications</p>
                                </span>
                                <span class="dropdown_item">
                                    <svg xmlns="http://www.w3.org/2000/svg"
                                    width="16"
                                    height="16"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="lucide lucide-log-out">
                                        <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                                        <polyline points="16 17 21 12 16 7"></polyline>
                                        <line x1="21" x2="9" y1="12" y2="12"></line>
                                    </svg>
                                    <p>Logout</p>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public User? user { get; set; }

    private string Transform = "100%";
    private string settingsTransform = "100%";
    private string menuTransform = "-100%";

    private bool IsProfileDropDown = false;

    private void UpdateTransform()
    {
        Transform = "0%";
    }

    private void OpenSettingsTab(string transform)
    {
        settingsTransform = transform;
        StateHasChanged(); // Ensure UI updates
    }

    private void UpdateSettingsTransform()
    {
        settingsTransform = "0%";
    }

    private void UpdateMenuTransform()
    {
        menuTransform = "0%";
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("registerOutsideClick", DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public void CloseDropdown()
    {
        IsProfileDropDown = false;
        StateHasChanged(); // Ensure UI updates
    }

    [JSInvokable]
    public void CloseTransform()
    {
        Transform = "100%";
        StateHasChanged(); // Ensure UI updates
    }

    [JSInvokable]
    public void CloseSettingsTransform()
    {
        //settingsTransform = "100%";
        //StateHasChanged(); // Ensure UI updates
    }
 
    private string currentPage = "";

    protected override void OnInitialized()
    {
        SetCurrentPage();
        Navigation.LocationChanged += (s, e) => SetCurrentPage();
    }

    private void SetCurrentPage()
    {
        var uri = Navigation.ToBaseRelativePath(Navigation.Uri);
        var segments = uri.Split('/', StringSplitOptions.RemoveEmptyEntries);

        if (segments.Length >= 2)
        {
            currentPage = segments[1]; // "details"
        }
        else
        {
            currentPage = "";
        }
    }
}